{"version":3,"sources":["components/Grid/index.js","components/Jumbotron/index.js","components/BookSearch/index.js","components/BookResult/index.js","components/Nav/index.js","utils/API.js","pages/Search.js","pages/Saved.js","pages/NoMatch.js","App.js","registerServiceWorker.js","index.js"],"names":["Container","_ref","fluid","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Jumbotron","target","rel","href","BookSearch","props","htmlFor","onChange","name","value","type","id","aria-describedby","placeholder","onClick","BookResult","googleId","title","author","description","image","link","buttonIcon","saveBook","src","alt","Nav","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","bind","assertThisInitialized","state","collapsed","setState","classOne","classTwo","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activePage","react_router_dom","to","Component","API","searchBooks","query","axios","get","params","q","getBooks","deleteBook","delete","bookData","post","Search","books","bookSearch","searchMessage","handleInputChange","event","_event$target","defineProperty","handleFormSubmit","preventDefault","then","res","data","length","catch","err","console","log","handleSaveButton","authors","_this2","components_Nav","components_Jumbotron","components_BookSearch","book","components_BookResult","key","volumeInfo","undefined","imageLinks","smallThumbnail","infoLink","Saved","loadBooks","_id","NoMatch","role","App","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1a4e621d.chunk.js","sourcesContent":["import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron text-center\">\n      <h1>Google Books React Search</h1>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://books.google.com/\">\n        \n      </a>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction BookSearch(props) {\n  return (\n    <div>\n      <form className=\"book-search\">\n        <div className=\"form-group\">\n          <label htmlFor=\"search-field\">Search</label>\n          <input\n            onChange={props.onChange}\n            name={props.name}\n            value={props.value}\n            type=\"search\"\n            className=\"form-control\"\n            id=\"search-field\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter title, author, etc.\" />\n        </div>\n        <button\n          onClick={props.onClick}\n          type=\"submit\"\n          className=\"btn btn-primary\">\n          Search</button>\n      </form>\n    </div>\n  );\n}\n\nexport default BookSearch;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction BookResult({ googleId, title, author, description, image, link, buttonIcon, saveBook }) {\n  return (\n    <div className=\"book-result\">\n      <h2 className=\"title\">{title}</h2>\n      <p className=\"author\">{author}</p>\n      <img className=\"image\" src={image} alt=\"cover art\" />\n      <p className=\"description\">{description}</p>\n      <div className=\"btn-panel\">\n        <a className=\"link btn btn-primary\" href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fas fa-eye\"></i>\n        </a>\n        <div className=\"save-btn btn btn-primary\" onClick={() => saveBook(googleId, title, author, description, image, link)}>\n          <i className={buttonIcon}></i>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BookResult;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./style.css\";\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true,\n    };\n  }\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  }\n  render() {\n    const collapsed = this.state.collapsed;\n    const classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\n    const classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark transparent-nav\">\n        <div className=\"container\">\n          <a className=\"navbar-brand\" href=\"/\">Google Books</a>\n          <button onClick={this.toggleNavbar} className={`${classTwo}`} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className={`${classOne}`} id=\"navbarResponsive\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className={ this.props.activePage === \"search\" ? \"nav-item active\" : \"nav-item\" }>\n                <Link className=\"nav-link\" to=\"/search\">Books Search</Link>\n              </li>\n              <li className={ this.props.activePage === \"saved\" ? \"nav-item active\" : \"nav-item\" }>\n                <Link className=\"nav-link\" to=\"/saved\">Books Saved</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\nexport default Nav;","import axios from \"axios\";\n\n// The getBooks method retrieves books from the server\n// It accepts a \"query\" or term to search the Google Books API for\nexport default {\n  // Searches Google Books via API\n  searchBooks: function (query) {\n    return axios.get(\"/api/search\", { params: { q: query } });\n  },\n  // Gets all books in local database\n  getBooks: function () {\n    return axios.get(\"/api/books\");\n  },\n  // Deletes the book with the given id\n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function (bookData) {\n    //console.log(\"saveBook function\");\n    //console.log(bookData);\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport BookSearch from \"../components/BookSearch\";\nimport BookResult from \"../components/BookResult\";\nimport Nav from \"../components/Nav\";\nimport API from \"../utils/API\";\n\nclass Search extends Component {\n    state = {\n        books: [],\n        bookSearch: \"\",\n        searchMessage: \"\"\n    };\n\n    handleInputChange = event => {\n        // Destructure the name and value properties off of event.target\n        // Update the appropriate state\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        // When the form is submitted, prevent its default behavior, get books update the books state\n        event.preventDefault();\n        API.searchBooks(this.state.bookSearch)\n            .then(res => {\n                //console.log(\"data received!\");\n                //console.log(res.data);\n                this.setState({\n                    books: res.data,\n                    searchMessage: (res.data.length === 0\n                        ? \"No results.\"\n                        : res.data.length + \" results:\")\n                });\n            })\n            .catch(err => {\n                this.setState({ searchMessage: \"No results.\" });\n                console.log(err);\n            });\n    };\n\n    handleSaveButton = (googleId, title, authors, description, image, link) => {\n        API.saveBook({\n            googleId: googleId,\n            title: title,\n            authors: authors,\n            description: description,\n            image: image,\n            link: link\n        })\n            .then(res => console.log(res))\n            .catch(err => console.log(err));\n    };\n\n    render() {\n        return (\n            <div>\n                <Nav activePage=\"search\" />\n                <Jumbotron />\n                <Container>\n                    <Row>\n                        <Col size=\"md-12\">\n                            <BookSearch\n                                name=\"bookSearch\"\n                                value={this.state.bookSearch}\n                                onChange={this.handleInputChange}\n                                onClick={this.handleFormSubmit}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n                <Container>\n                    <Row>\n                        <Col size=\"md-12\">\n                            <h1>{this.state.searchMessage}</h1>\n                            {this.state.books.length === 0 ? \"\" :\n                                this.state.books.map(book => (\n                                    <BookResult\n                                        key={book.id}\n                                        title={book.volumeInfo.title}\n                                        author={book.volumeInfo.authors !== undefined\n                                            ? book.volumeInfo.authors.join(\", \")\n                                            : \"No author given\"}\n                                        description={book.volumeInfo.description}\n                                        image={book.volumeInfo.imageLinks !== undefined\n                                            ? book.volumeInfo.imageLinks.smallThumbnail\n                                            : \"https://via.placeholder.com/100x150?text=COVER+NOT+AVALABLE\"}\n                                        link={book.volumeInfo.infoLink}\n                                        buttonIcon={\"fas fa-bookmark\"}\n                                        saveBook={event => this.handleSaveButton(\n                                            book.id,\n                                            book.volumeInfo.title,\n                                            book.volumeInfo.authors !== undefined\n                                                ? book.volumeInfo.authors\n                                                : [\"No author given\"],\n                                            book.volumeInfo.description,\n                                            book.volumeInfo.imageLinks !== undefined\n                                                ? book.volumeInfo.imageLinks.smallThumbnail\n                                                : \"https://via.placeholder.com/100x150?text=COVER+NOT+AVALABLE\",\n                                            book.volumeInfo.infoLink\n                                        )}\n                                    />\n                                ))}\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Search;","import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport BookResult from \"../components/BookResult\";\nimport Nav from \"../components/Nav\";\nimport API from \"../utils/API\";\n\nclass Saved extends Component {\n    state = {\n        books: []\n    };\n\n    componentDidMount() {\n        this.loadBooks();\n    }\n\n    loadBooks = () => {\n        API.getBooks()\n            .then(res =>\n                this.setState({ books: res.data })\n            )\n            .catch(err => console.log(err));\n    };\n\n    deleteBook = (id) => {\n        //console.log(\"delete book \" + id);\n        API.deleteBook(id)\n            .then(res => this.loadBooks())\n            .catch(err => console.log(err));\n    };\n\n    render() {\n        return (\n            <div>\n                <Nav activePage=\"saved\" />\n                <Jumbotron />\n                <Container>\n                    <Row>\n                        <Col size=\"md-12\">\n                            <h1>Saved Books</h1>\n                            {this.state.books.map(book => (\n                                <BookResult\n                                    key={book._id}\n                                    title={book.title}\n                                    author={book.authors !== undefined\n                                        ? book.authors.join(\", \")\n                                        : \"No author given\"}\n                                    description={book.description}\n                                    image={book.image !== undefined\n                                        ? book.image\n                                        : \"https://via.placeholder.com/100x150?text=COVER+NOT+AVALABLE\"}\n                                    link={book.link}\n                                    buttonIcon={\"fas fa-trash-alt\"}\n                                    saveBook={() => this.deleteBook(book._id)}\n                                />\n                            ))}\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Saved;","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\nimport NoMatch from \"./pages/NoMatch\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/search\" component={Search} />\n          <Route exact path=\"/saved\" component={Saved} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}